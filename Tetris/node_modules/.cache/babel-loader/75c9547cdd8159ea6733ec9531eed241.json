{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback, useEffect } from \"react\";\nconst defaultDropTime = 1000;\nconst minimumDropTime = 100;\nconst speedIncrement = 50;\nexport const useDropTime = _ref => {\n  _s();\n  let {\n    gameStats\n  } = _ref;\n  const [dropTime, setDropTime] = useState(defaultDropTime);\n  const [previousDropTime, setPreviousDropTime] = useState();\n  const resumeDropTime = useCallback(() => {\n    if (!previousDropTime) {\n      return;\n    }\n    setDropTime(previousDropTime);\n    setPreviousDropTime(null);\n  }, [previousDropTime]);\n  const pauseDropTime = useCallback(() => {\n    if (dropTime) {\n      setPreviousDropTime(dropTime);\n    }\n    setDropTime(null);\n  }, [dropTime, setPreviousDropTime]);\n  useEffect(() => {\n    const speed = speedIncrement * (gameStats.level - 1);\n    const newDropTime = Math.max(defaultDropTime - speed, minimumDropTime);\n    setDropTime(newDropTime);\n  }, [gameStats.level, setDropTime]);\n  return [dropTime, pauseDropTime, resumeDropTime];\n};\n_s(useDropTime, \"ChtgIt+zWP3XZTSpbcKkIY+0ibg=\");","map":{"version":3,"names":["useState","useCallback","useEffect","defaultDropTime","minimumDropTime","speedIncrement","useDropTime","gameStats","dropTime","setDropTime","previousDropTime","setPreviousDropTime","resumeDropTime","pauseDropTime","speed","level","newDropTime","Math","max"],"sources":["C:/Sachin's folder/Programming/Web Development/React/Tetris/src/hooks/useDropTime.js"],"sourcesContent":["import { useState, useCallback, useEffect } from \"react\";\r\n\r\nconst defaultDropTime = 1000;\r\nconst minimumDropTime = 100;\r\nconst speedIncrement = 50;\r\n\r\nexport const useDropTime = ({ gameStats }) => {\r\n  const [dropTime, setDropTime] = useState(defaultDropTime);\r\n  const [previousDropTime, setPreviousDropTime] = useState();\r\n\r\n  const resumeDropTime = useCallback(() => {\r\n    if (!previousDropTime) {\r\n      return;\r\n    }\r\n    setDropTime(previousDropTime);\r\n    setPreviousDropTime(null);\r\n  }, [previousDropTime]);\r\n\r\n  const pauseDropTime = useCallback(() => {\r\n    if (dropTime) {\r\n      setPreviousDropTime(dropTime);\r\n    }\r\n    setDropTime(null);\r\n  }, [dropTime, setPreviousDropTime]);\r\n\r\n  useEffect(() => {\r\n    const speed = speedIncrement * (gameStats.level - 1);\r\n    const newDropTime = Math.max(defaultDropTime - speed, minimumDropTime);\r\n\r\n    setDropTime(newDropTime);\r\n  }, [gameStats.level, setDropTime]);\r\n\r\n  return [dropTime, pauseDropTime, resumeDropTime];\r\n};\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AAExD,MAAMC,eAAe,GAAG,IAAI;AAC5B,MAAMC,eAAe,GAAG,GAAG;AAC3B,MAAMC,cAAc,GAAG,EAAE;AAEzB,OAAO,MAAMC,WAAW,GAAG,QAAmB;EAAA;EAAA,IAAlB;IAAEC;EAAU,CAAC;EACvC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAACG,eAAe,CAAC;EACzD,MAAM,CAACO,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,EAAE;EAE1D,MAAMY,cAAc,GAAGX,WAAW,CAAC,MAAM;IACvC,IAAI,CAACS,gBAAgB,EAAE;MACrB;IACF;IACAD,WAAW,CAACC,gBAAgB,CAAC;IAC7BC,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC,EAAE,CAACD,gBAAgB,CAAC,CAAC;EAEtB,MAAMG,aAAa,GAAGZ,WAAW,CAAC,MAAM;IACtC,IAAIO,QAAQ,EAAE;MACZG,mBAAmB,CAACH,QAAQ,CAAC;IAC/B;IACAC,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC,EAAE,CAACD,QAAQ,EAAEG,mBAAmB,CAAC,CAAC;EAEnCT,SAAS,CAAC,MAAM;IACd,MAAMY,KAAK,GAAGT,cAAc,IAAIE,SAAS,CAACQ,KAAK,GAAG,CAAC,CAAC;IACpD,MAAMC,WAAW,GAAGC,IAAI,CAACC,GAAG,CAACf,eAAe,GAAGW,KAAK,EAAEV,eAAe,CAAC;IAEtEK,WAAW,CAACO,WAAW,CAAC;EAC1B,CAAC,EAAE,CAACT,SAAS,CAACQ,KAAK,EAAEN,WAAW,CAAC,CAAC;EAElC,OAAO,CAACD,QAAQ,EAAEK,aAAa,EAAED,cAAc,CAAC;AAClD,CAAC;AAAC,GA3BWN,WAAW"},"metadata":{},"sourceType":"module"}
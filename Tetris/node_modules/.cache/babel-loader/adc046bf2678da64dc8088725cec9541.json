{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sachin's folder\\\\Programming\\\\HTML\\\\React\\\\reactjs\\\\src\\\\meme.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\n// import memesData from \"./memesdata\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n  const [meme, setMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"https://www.egames.news/__export/1654550370338/sites/debate/img/2022/06/06/nicorobin.jpg_903948830.jpg\"\n  });\n  const [allMemes, setAllMemes] = React.useState([]);\n  React.useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\").then(res => res.json()).then(data => setAllMemes(data.data.memes));\n  }, []);\n  console.log(allMemes);\n  function getMemeImage() {\n    const memesArray = allMemes.data.memes;\n    const randomNumber = Math.floor(Math.random() * memesArray.length);\n    const url = memesArray[randomNumber].url;\n    setMeme(prevMeme => ({\n      ...prevMeme,\n      randomImage: url\n    }));\n  }\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setMeme(prevMeme => ({\n      ...prevMeme,\n      [name]: value\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-input\",\n        placeholder: \"top\",\n        type: \"text\",\n        name: \"topText\",\n        value: meme.topText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-input\",\n        placeholder: \"bottom\",\n        type: \"text \",\n        name: \"bottomText\",\n        value: meme.bottomText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getMemeImage,\n        className: \"form-button\",\n        children: \"Get a new meme image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme.randomImage,\n        className: \"meme-img\",\n        alt: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme-text top\",\n        children: meme.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme-text bottom\",\n        children: meme.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Meme, \"Z3/okao14SwLV614/JkgUjXx0b0=\");\n_c = Meme;\nvar _c;\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","Meme","meme","setMeme","useState","topText","bottomText","randomImage","allMemes","setAllMemes","useEffect","fetch","then","res","json","data","memes","console","log","getMemeImage","memesArray","randomNumber","Math","floor","random","length","url","prevMeme","handleChange","event","name","value","target"],"sources":["C:/Sachin's folder/Programming/HTML/React/reactjs/src/meme.js"],"sourcesContent":["import React from \"react\";\r\n// import memesData from \"./memesdata\";\r\n\r\nexport default function Meme() {\r\n  const [meme, setMeme] = React.useState({\r\n    topText: \"\",\r\n    bottomText: \"\",\r\n    randomImage:\r\n      \"https://www.egames.news/__export/1654550370338/sites/debate/img/2022/06/06/nicorobin.jpg_903948830.jpg\",\r\n  });\r\n\r\n  const [allMemes, setAllMemes] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    fetch(\"https://api.imgflip.com/get_memes\")\r\n      .then((res) => res.json())\r\n      .then((data) =>setAllMemes(data.data.memes));\r\n  },[]);\r\n  console.log(allMemes)\r\n\r\n  function getMemeImage() {\r\n    const memesArray = allMemes.data.memes;\r\n    const randomNumber = Math.floor(Math.random() * memesArray.length);\r\n    const url = memesArray[randomNumber].url;\r\n    setMeme((prevMeme) => ({ ...prevMeme, randomImage: url }));\r\n  }\r\n\r\n  \r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    setMeme((prevMeme) => ({\r\n      ...prevMeme,\r\n      [name]: value,\r\n    }));\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"form\">\r\n        <input\r\n          className=\"form-input\"\r\n          placeholder=\"top\"\r\n          type=\"text\"\r\n          name=\"topText\"\r\n          value={meme.topText}\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <input\r\n          className=\"form-input\"\r\n          placeholder=\"bottom\"\r\n          type=\"text \"\r\n          name=\"bottomText\"\r\n          value={meme.bottomText}\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <button onClick={getMemeImage} className=\"form-button\">\r\n          Get a new meme image\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"meme\">\r\n        <img src={meme.randomImage} className=\"meme-img\" alt=\"Error\"></img>\r\n        <h2 className=\"meme-text top\">{meme.topText}</h2>\r\n        <h2 className=\"meme-text bottom\">{meme.bottomText}</h2>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AAAA;AAEA,eAAe,SAASC,IAAI,GAAG;EAAA;EAC7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGH,KAAK,CAACI,QAAQ,CAAC;IACrCC,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE,EAAE;IACdC,WAAW,EACT;EACJ,CAAC,CAAC;EAEF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,KAAK,CAACI,QAAQ,CAAC,EAAE,CAAC;EAElDJ,KAAK,CAACU,SAAS,CAAC,MAAM;IACpBC,KAAK,CAAC,mCAAmC,CAAC,CACvCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAIN,WAAW,CAACM,IAAI,CAACA,IAAI,CAACC,KAAK,CAAC,CAAC;EAChD,CAAC,EAAC,EAAE,CAAC;EACLC,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC;EAErB,SAASW,YAAY,GAAG;IACtB,MAAMC,UAAU,GAAGZ,QAAQ,CAACO,IAAI,CAACC,KAAK;IACtC,MAAMK,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGJ,UAAU,CAACK,MAAM,CAAC;IAClE,MAAMC,GAAG,GAAGN,UAAU,CAACC,YAAY,CAAC,CAACK,GAAG;IACxCvB,OAAO,CAAEwB,QAAQ,KAAM;MAAE,GAAGA,QAAQ;MAAEpB,WAAW,EAAEmB;IAAI,CAAC,CAAC,CAAC;EAC5D;EAGA,SAASE,YAAY,CAACC,KAAK,EAAE;IAC3B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IACpC7B,OAAO,CAAEwB,QAAQ,KAAM;MACrB,GAAGA,QAAQ;MACX,CAACG,IAAI,GAAGC;IACV,CAAC,CAAC,CAAC;EACL;EAEA,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,MAAM;MAAA,wBACnB;QACE,SAAS,EAAC,YAAY;QACtB,WAAW,EAAC,KAAK;QACjB,IAAI,EAAC,MAAM;QACX,IAAI,EAAC,SAAS;QACd,KAAK,EAAE7B,IAAI,CAACG,OAAQ;QACpB,QAAQ,EAAEuB;MAAa;QAAA;QAAA;QAAA;MAAA,QACvB,eAEF;QACE,SAAS,EAAC,YAAY;QACtB,WAAW,EAAC,QAAQ;QACpB,IAAI,EAAC,OAAO;QACZ,IAAI,EAAC,YAAY;QACjB,KAAK,EAAE1B,IAAI,CAACI,UAAW;QACvB,QAAQ,EAAEsB;MAAa;QAAA;QAAA;QAAA;MAAA,QACvB,eAEF;QAAQ,OAAO,EAAET,YAAa;QAAC,SAAS,EAAC,aAAa;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAE7C;IAAA;MAAA;MAAA;MAAA;IAAA,QACL,eAEN;MAAK,SAAS,EAAC,MAAM;MAAA,wBACnB;QAAK,GAAG,EAAEjB,IAAI,CAACK,WAAY;QAAC,SAAS,EAAC,UAAU;QAAC,GAAG,EAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAO,eACnE;QAAI,SAAS,EAAC,eAAe;QAAA,UAAEL,IAAI,CAACG;MAAO;QAAA;QAAA;QAAA;MAAA,QAAM,eACjD;QAAI,SAAS,EAAC,kBAAkB;QAAA,UAAEH,IAAI,CAACI;MAAU;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QACnD;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEX;AAAC,GAlEuBL,IAAI;AAAA,KAAJA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sachin's folder\\\\Programming\\\\HTML\\\\React\\\\reactjs\\\\src\\\\components\\\\Preview.js\";\nimport \"./Preview.css\";\nimport React from \"react\";\nimport { buildBoard } from \"../business/Board\";\nimport { transferToBoard } from \"../business/Tetrominoes\";\nimport BoardCell from \"./BoardCell\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Preview = _ref => {\n  let {\n    tetromino,\n    index\n  } = _ref;\n  const {\n    shape,\n    className\n  } = tetromino;\n  const board = buildBoard({\n    rows: 4,\n    columns: 4\n  });\n  const style = {\n    top: `${index * 15}vw`\n  };\n  board.rows = transferToBoard({\n    className,\n    isOccupied: false,\n    position: {\n      row: 0,\n      column: 0\n    },\n    rows: board.rows,\n    shape\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Preview\",\n    style: style,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Preview-board\",\n      children: board.rows.map((row, y) => row.map((cell, x) => /*#__PURE__*/_jsxDEV(BoardCell, {\n        cell: cell\n      }, x * board.size.columns + x, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = Preview;\nexport default _c2 = /*#__PURE__*/React.memo(Preview);\nvar _c, _c2;\n$RefreshReg$(_c, \"Preview\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","buildBoard","transferToBoard","BoardCell","Preview","tetromino","index","shape","className","board","rows","columns","style","top","isOccupied","position","row","column","map","y","cell","x","size","memo"],"sources":["C:/Sachin's folder/Programming/HTML/React/reactjs/src/components/Preview.js"],"sourcesContent":["import \"./Preview.css\";\r\nimport React from \"react\";\r\n\r\nimport { buildBoard } from \"../business/Board\";\r\nimport { transferToBoard } from \"../business/Tetrominoes\";\r\nimport BoardCell from \"./BoardCell\";\r\n\r\nconst Preview = ({ tetromino, index }) => {\r\n  const { shape, className } = tetromino;\r\n  const board = buildBoard({ rows: 4, columns: 4 });\r\n  const style = { top: `${index * 15}vw` };\r\n  board.rows = transferToBoard({\r\n    className,\r\n    isOccupied: false,\r\n    position: { row: 0, column: 0 },\r\n    rows: board.rows,\r\n    shape,\r\n  });\r\n  return (\r\n    <div className=\"Preview\" style={style}>\r\n      <div className=\"Preview-board\">\r\n        {board.rows.map((row, y) =>\r\n          row.map((cell, x) => (\r\n            <BoardCell key={x * board.size.columns + x} cell={cell} />\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default React.memo(Preview);\r\n"],"mappings":";AAAA,OAAO,eAAe;AACtB,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,eAAe,QAAQ,yBAAyB;AACzD,OAAOC,SAAS,MAAM,aAAa;AAAC;AAEpC,MAAMC,OAAO,GAAG,QAA0B;EAAA,IAAzB;IAAEC,SAAS;IAAEC;EAAM,CAAC;EACnC,MAAM;IAAEC,KAAK;IAAEC;EAAU,CAAC,GAAGH,SAAS;EACtC,MAAMI,KAAK,GAAGR,UAAU,CAAC;IAAES,IAAI,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAE,CAAC,CAAC;EACjD,MAAMC,KAAK,GAAG;IAAEC,GAAG,EAAG,GAAEP,KAAK,GAAG,EAAG;EAAI,CAAC;EACxCG,KAAK,CAACC,IAAI,GAAGR,eAAe,CAAC;IAC3BM,SAAS;IACTM,UAAU,EAAE,KAAK;IACjBC,QAAQ,EAAE;MAAEC,GAAG,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAC;IAC/BP,IAAI,EAAED,KAAK,CAACC,IAAI;IAChBH;EACF,CAAC,CAAC;EACF,oBACE;IAAK,SAAS,EAAC,SAAS;IAAC,KAAK,EAAEK,KAAM;IAAA,uBACpC;MAAK,SAAS,EAAC,eAAe;MAAA,UAC3BH,KAAK,CAACC,IAAI,CAACQ,GAAG,CAAC,CAACF,GAAG,EAAEG,CAAC,KACrBH,GAAG,CAACE,GAAG,CAAC,CAACE,IAAI,EAAEC,CAAC,kBACd,QAAC,SAAS;QAAkC,IAAI,EAAED;MAAK,GAAvCC,CAAC,GAAGZ,KAAK,CAACa,IAAI,CAACX,OAAO,GAAGU,CAAC;QAAA;QAAA;QAAA;MAAA,QAC3C,CAAC;IACH;MAAA;MAAA;MAAA;IAAA;EACG;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,KAtBIjB,OAAO;AAuBb,kCAAeJ,KAAK,CAACuB,IAAI,CAACnB,OAAO,CAAC;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sachin's folder\\\\Programming\\\\HTML\\\\React\\\\reactjs\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Sidebar from \"./components/Sidebar\";\nimport Editor from \"./components/Editor\";\nimport { data } from \"./data\";\nimport Split from \"react-split\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [notes, setNotes] = React.useState([]);\n  const [currentNoteId, setCurrentNoteId] = React.useState(notes[0] && notes[0].id || \"\");\n  function createNewNote() {\n    const newNote = {\n      id: nanoid(),\n      body: \"# Type your markdown note's title here\"\n    };\n    setNotes(prevNotes => [newNote, ...prevNotes]);\n    setCurrentNoteId(newNote.id);\n  }\n  function updateNote(text) {\n    setNotes(oldNotes => oldNotes.map(oldNote => {\n      return oldNote.id === currentNoteId ? {\n        ...oldNote,\n        body: text\n      } : oldNote;\n    }));\n  }\n  function findCurrentNote() {\n    return notes.find(note => {\n      return note.id === currentNoteId;\n    }) || notes[0];\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: notes.length > 0 ? /*#__PURE__*/_jsxDEV(Split, {\n      sizes: [30, 70],\n      direction: \"horizontal\",\n      className: \"split\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        notes: notes,\n        currentNote: findCurrentNote(),\n        setCurrentNoteId: setCurrentNoteId,\n        newNote: createNewNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), currentNoteId && notes.length > 0 && /*#__PURE__*/_jsxDEV(Editor, {\n        currentNote: findCurrentNote(),\n        updateNote: updateNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-notes\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"You have no notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"first-note\",\n        onClick: createNewNote,\n        children: \"Create one now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"VGu8DdM6YvxodcgSUp6Lv3WpjOU=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Sidebar","Editor","data","Split","nanoid","App","notes","setNotes","useState","currentNoteId","setCurrentNoteId","id","createNewNote","newNote","body","prevNotes","updateNote","text","oldNotes","map","oldNote","findCurrentNote","find","note","length"],"sources":["C:/Sachin's folder/Programming/HTML/React/reactjs/src/App.js"],"sourcesContent":["import React from \"react\"\r\nimport Sidebar from \"./components/Sidebar\"\r\nimport Editor from \"./components/Editor\"\r\nimport { data } from \"./data\"\r\nimport Split from \"react-split\"\r\nimport {nanoid} from \"nanoid\"\r\n\r\nexport default function App() {\r\n    const [notes, setNotes] = React.useState([])\r\n    const [currentNoteId, setCurrentNoteId] = React.useState(\r\n        (notes[0] && notes[0].id) || \"\"\r\n    )\r\n    \r\n    function createNewNote() {\r\n        const newNote = {\r\n            id: nanoid(),\r\n            body: \"# Type your markdown note's title here\"\r\n        }\r\n        setNotes(prevNotes => [newNote, ...prevNotes])\r\n        setCurrentNoteId(newNote.id)\r\n    }\r\n    \r\n    function updateNote(text) {\r\n        setNotes(oldNotes => oldNotes.map(oldNote => {\r\n            return oldNote.id === currentNoteId\r\n                ? { ...oldNote, body: text }\r\n                : oldNote\r\n        }))\r\n    }\r\n    \r\n    function findCurrentNote() {\r\n        return notes.find(note => {\r\n            return note.id === currentNoteId\r\n        }) || notes[0]\r\n    }\r\n    \r\n    return (\r\n        <main>\r\n        {\r\n            notes.length > 0 \r\n            ?\r\n            <Split \r\n                sizes={[30, 70]} \r\n                direction=\"horizontal\" \r\n                className=\"split\"\r\n            >\r\n                <Sidebar\r\n                    notes={notes}\r\n                    currentNote={findCurrentNote()}\r\n                    setCurrentNoteId={setCurrentNoteId}\r\n                    newNote={createNewNote}\r\n                />\r\n                {\r\n                    currentNoteId && \r\n                    notes.length > 0 &&\r\n                    <Editor \r\n                        currentNote={findCurrentNote()} \r\n                        updateNote={updateNote} \r\n                    />\r\n                }\r\n            </Split>\r\n            :\r\n            <div className=\"no-notes\">\r\n                <h1>You have no notes</h1>\r\n                <button \r\n                    className=\"first-note\" \r\n                    onClick={createNewNote}\r\n                >\r\n                    Create one now\r\n                </button>\r\n            </div>\r\n            \r\n        }\r\n        </main>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAASC,IAAI,QAAQ,QAAQ;AAC7B,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAAQC,MAAM,QAAO,QAAQ;AAAA;AAE7B,eAAe,SAASC,GAAG,GAAG;EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,KAAK,CAACS,QAAQ,CACnDF,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,CAACK,EAAE,IAAK,EAAE,CAClC;EAED,SAASC,aAAa,GAAG;IACrB,MAAMC,OAAO,GAAG;MACZF,EAAE,EAAEP,MAAM,EAAE;MACZU,IAAI,EAAE;IACV,CAAC;IACDP,QAAQ,CAACQ,SAAS,IAAI,CAACF,OAAO,EAAE,GAAGE,SAAS,CAAC,CAAC;IAC9CL,gBAAgB,CAACG,OAAO,CAACF,EAAE,CAAC;EAChC;EAEA,SAASK,UAAU,CAACC,IAAI,EAAE;IACtBV,QAAQ,CAACW,QAAQ,IAAIA,QAAQ,CAACC,GAAG,CAACC,OAAO,IAAI;MACzC,OAAOA,OAAO,CAACT,EAAE,KAAKF,aAAa,GAC7B;QAAE,GAAGW,OAAO;QAAEN,IAAI,EAAEG;MAAK,CAAC,GAC1BG,OAAO;IACjB,CAAC,CAAC,CAAC;EACP;EAEA,SAASC,eAAe,GAAG;IACvB,OAAOf,KAAK,CAACgB,IAAI,CAACC,IAAI,IAAI;MACtB,OAAOA,IAAI,CAACZ,EAAE,KAAKF,aAAa;IACpC,CAAC,CAAC,IAAIH,KAAK,CAAC,CAAC,CAAC;EAClB;EAEA,oBACI;IAAA,UAEIA,KAAK,CAACkB,MAAM,GAAG,CAAC,gBAEhB,QAAC,KAAK;MACF,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,CAAE;MAChB,SAAS,EAAC,YAAY;MACtB,SAAS,EAAC,OAAO;MAAA,wBAEjB,QAAC,OAAO;QACJ,KAAK,EAAElB,KAAM;QACb,WAAW,EAAEe,eAAe,EAAG;QAC/B,gBAAgB,EAAEX,gBAAiB;QACnC,OAAO,EAAEE;MAAc;QAAA;QAAA;QAAA;MAAA,QACzB,EAEEH,aAAa,IACbH,KAAK,CAACkB,MAAM,GAAG,CAAC,iBAChB,QAAC,MAAM;QACH,WAAW,EAAEH,eAAe,EAAG;QAC/B,UAAU,EAAEL;MAAW;QAAA;QAAA;QAAA;MAAA,QACzB;IAAA;MAAA;MAAA;MAAA;IAAA,QAEF,gBAER;MAAK,SAAS,EAAC,UAAU;MAAA,wBACrB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA0B,eAC1B;QACI,SAAS,EAAC,YAAY;QACtB,OAAO,EAAEJ,aAAc;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAGlB;IAAA;MAAA;MAAA;MAAA;IAAA;EACP;IAAA;IAAA;IAAA;EAAA,QAGH;AAEf;AAAC,GApEuBP,GAAG;AAAA,KAAHA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module"}